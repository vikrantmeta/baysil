class User < ActiveRecord::Base
has_many :language
has_many :project
has_many :skill
has_many :education
has_many :exprience
has_many :certification
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable, :omniauthable


  # Setup accessible (or protected) attributes for your model
  attr_accessible :email, :password, :password_confirmation, :remember_me
   attr_accessible :first_name,:last_name,:phone,  :provider, :uid, image, headline, location


def self.connect_to_linkedin(auth, signed_in_resource=nil)

$a = auth
    user = User.where(:provider => auth.provider, :uid => auth.uid).first
    if user
      return user
    else
      registered_user = User.where(:email => auth.info.email).first
      if registered_user
        return registered_user
      else

       # user = User.create(name:auth.info.first_name,
        #                    provider:auth.provider,
         #                   uid:auth.uid,
          #                  email:auth.info.email,
           #                 password:Devise.friendly_token[0,20],
            #              )
   user = User.create( email:auth.info.email,
                         password:Devise.friendly_token[0,20],
			 provider:auth.provider,
			 uid:auth.uid,
			first_name:auth.info.first_name,
			last_name:auth.info.last_name,
			image:auth.info.image,
			phone:auth.info.phone,
			headline:auth.info.headline,
			location:auth.info.location,
			

                          )














      end

    end
  end 

end
